version: '3'
services:
    darksouls-db:
        image: mysql:8
        environment:
            MYSQL_DATABASE: 'data'
            MYSQL_USER: 'user'
            MYSQL_PASSWORD: 'password'
            MYSQL_ROOT_PASSWORD: 'password'
        ports:
            - "3306:3306"
        healthcheck:
            test: mysql --user=$$MYSQL_USER --password=$$MYSQL_PASSWORD -e 'SHOW DATABASES;'
            interval: 30s
            timeout: 10s
            retries: 5
    darksouls-graph-db:
        build:
            context: ../
            dockerfile: ./docker/Dockerfile.database
        ports:
            - "7687:7687"
            - "7474:7474"
            - "7473:7473"
        environment:
            - NEO4J_AUTH=neo4j/secret
            - NEO4J_dbms_memory_pagecache_size=1G
            - NEO4J_dbms.memory.heap.initial_size=1G
            - NEO4J_dbms_memory_heap_max__size=1G
            - NEO4JLABS_PLUGINS=["apoc"]
    darksouls-graph-db-seeder:
        build:
            context: ../
            dockerfile: ./docker/Dockerfile.seeder
        depends_on:
            darksouls-graph-db:
                condition: service_healthy
        links:
            - "darksouls-graph-db"
        environment: 
            - NEO4J_USERNAME=neo4j
            - NEO4J_PASSWORD=secret
    darksouls-backend:
        build:
            context: ../
            dockerfile: ./docker/Dockerfile
        ports:
            - "8080:8080"
            - "8000:8000"
        depends_on:
            darksouls-db:
                condition: service_healthy
            darksouls-graph-db:
                condition: service_healthy
        links:
            - "darksouls-db"
            - "darksouls-graph-db"
        environment:
            # JDBC
            - spring.datasource.url=jdbc:mysql://db:3306/data
            - spring.datasource.username=user
            - spring.datasource.password=password
            # Neo4J
            - spring.neo4j.uri=bolt://graph-db:7687
            - spring.neo4j.authentication.username=neo4j
            - spring.neo4j.authentication.password=secret
            # Profile
            - spring.profiles.active=initialize